// Description:
//    Liste chainee d'entiers
//
// Resultats:
//    1 2 4 3 
//	  1 4 5 
//	  3
//
// Historique:
//    cree le 19/01/2021

class Cell {
	int val;
	Cell next;
	
	void setNextCell(Cell c) 
		{ next = c; }
	void setVal(int v) 
		{ val = v; }
	
	Cell getNextCell()
		{ return this.next; }
	int getVal()
		{ return this.val; }
		
	void man() {
		println("void setNextCell(Cell c) : set the next cell");
		println("void setVal(int v) : sets the value of the cell");
		println("Cell getNextCell() : gets the next cell");
		println("int getVal() : gets the value of the cell");
		println("void man() : prints a little manual");
	}
}

class IntList {
	int size = 0;
	Cell first;
	
	void putAt(int index, int val) {
		int i = 1;	// on veut s'arreter juste avant la cellule situee en 'index'
		Cell temp, c = new Cell();
		c.setVal(val);
		
		if(index == -1) {
			index = size;
		}

		if(index == 0) {
			c.setNextCell(first);
			first = c;
		} else if(index > 0 && index <= size) {
			temp = first;
				
			while(i < index) {
				temp = temp.getNextCell();
				i = i + 1;
			}
			
			if(index != size) {
				c.setNextCell( temp.getNextCell() );
			}
			temp.setNextCell(c);
			
		} else {
			size = size - 1;
			println("Index out of bound");
			println("Use -1 to put at the end, 0 at the beginning");
		}
		size = size + 1;
	}
	
	void put(int val) {
		this.putAt(-1,val);
	}
	
	int get(int index) {
		int i = 0;	// on veut s'arreter au niveau de la cellule en 'index'
		Cell temp;
		
		if(index == -1) {
			index = size-1;
		}
		
		if(index >= 0 && index < size) {
			temp = first;
				
			while(i < index) {
				temp = temp.getNextCell();
				i = i + 1;
			}
			return temp.getVal();
		} else {
			println("Index out of bound");
		}
	}
	
	void removeAt(int index) {
		int i = 1,ret;	// on veut s'arreter juste avant la cellule situee en 'index'
		Cell temp;
		
		if(index == -1) {
			index = size - 1;
		}
		
		if(index == 0) {
			ret = first.getVal();
			first = first.next;
		} else if(index > 0 && index < size) {
			temp = first;
				
			while(i < index) {
				temp = temp.getNextCell();
				i = i + 1;
			}
			
			ret = temp.getNextCell().getVal();
			temp.setNextCell(temp.getNextCell().getNextCell());
		} else {
			size = size + 1;
			println("Index out of bound");
		}
		size = size - 1;
	}
	
	void remove() {
		this.removeAt(-1);
	}
	
	int getSize()
		{ return size; }
	
	void printList() {
		int i=0;
		
		while(i<size) {
			print(this.get(i)," ");
			i = i + 1;
		}
		println();
	}
	
	void man() {
		println("void putAt(int index, int val) : puts 'val' at 'index'. '0' puts at the beginning, and '-1' at the end. If the index equals the size of the list, it puts the value at the end");
		println("void put(int val) : puts 'val' at the end");
		println("int get(int index) : returns the value at 'index'");
		println("int popAt(int index) : removes and returns the element at 'index'");
		println("void pop() : pops the last element");
		println("string getSize() : returns the size of the list");
		println("void printList() : prints all the values");
		println("void man() : prints a little manual");
	}
}